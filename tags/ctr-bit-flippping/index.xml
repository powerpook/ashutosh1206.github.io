<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CTR-Bit-Flippping on Ashutosh</title>
    <link>https://ashutosh1206.github.io/tags/ctr-bit-flippping/</link>
    <description>Recent content in CTR-Bit-Flippping on Ashutosh</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 05 Feb 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://ashutosh1206.github.io/tags/ctr-bit-flippping/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>GCM - Nullcon HackIM CTF</title>
      <link>https://ashutosh1206.github.io/writeups/hackim19-gcm/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://ashutosh1206.github.io/writeups/hackim19-gcm/</guid>
      <description>Challenge Points: 300
Challenge Description: [None]
tl;dr
 CTR Bit Flipping Break GHASH to get authentication key H (unintended approach) Bypass authentication  The way we solved it (unintended approach) was pretty interesting!
Challenge Internals We are given a service that allows us to encrypt/decrypt data using AES-CTR mode. Code for this is as follows:
def main(): global sessionid username = input(&#39;Enter username: &#39;) sessionid = sha256(username.encode()).digest()[:10] while True: print(&amp;quot;Menu&amp;quot;) print(&amp;quot;[1] Encrypt&amp;quot;) print(&amp;quot;[2] Decrypt&amp;quot;) print(&amp;quot;[3] Exit&amp;quot;) choice = input(&amp;quot;&amp;gt; &amp;quot;) if choice == &#39;1&#39;: msg = input(&#39;Enter message to be encrypted: &#39;) if &#39;flag&#39; in msg: print(&amp;quot;You cant encrypt flag :(&amp;quot;) continue c = encrypt(msg.</description>
    </item>
    
  </channel>
</rss>